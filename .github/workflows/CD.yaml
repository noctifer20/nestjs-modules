name: Publish

on:
  push:
    branches:
      - master
jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get the two latest versions
        run: |
          BASE=${{ github.event.before }}
          echo "base=$(echo $BASE)" >> $GITHUB_ENV

      - name: Setup NodeJS 16
        uses: actions/setup-node@v1
        with:
          registry-url: 'https://npm.pkg.github.com'
          node-version: 16
          scope: '@noctifer20'

      - name: Install yarn
        run: npm install -g yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **\node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Configure Git
        run: |
          git config --global user.name "noctifer20" &&
          git config --global user.email "ohanjanyan.miqayel@gmail.com"

      - name: Publish (GitHub Pakcages)
        run: yarn nx affected --parallel=1 --base=$base --target=version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup NodeJS 16
        uses: actions/setup-node@v1
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version: 16

      - name: Publish (NPM)
        run: yarn nx affected --parallel=1 --base=$base --target=version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Tag last-release
        run: |
          git tag -f last-release
          git push origin last-release --force
